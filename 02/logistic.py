# -*- coding: utf-8 -*-
"""E02_MLL.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DQ3Y7mPzQeXbtI6KjwuMZKVLhgDIlZuT
"""

import pandas as pd

df = pd.read_csv('Titanic-Dataset.csv')
print(df.head())

print(df.info())

df = df[['Survived', 'Age', 'Sex', 'Pclass']]
df = pd.get_dummies(df, columns=['Sex', 'Pclass'])
df.dropna(inplace=True)
print(df.head())

print(df)

from sklearn.model_selection import train_test_split

x = df.drop('Survived', axis=1)
y = df['Survived']

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, stratify=y, random_state=0)

from sklearn.linear_model import LogisticRegression

model = LogisticRegression(random_state=0)
model.fit(x_train, y_train)

model.score(x_test, y_test)

from sklearn.model_selection import cross_val_score

cross_val_score(model, x, y, cv=5).mean()

from sklearn.metrics import confusion_matrix

y_predicted = model.predict(x_test)
confusion_matrix(y_test, y_predicted)

from sklearn.metrics import ConfusionMatrixDisplay, confusion_matrix
import matplotlib.pyplot as plt

y_pred = model.predict(x_test)

# Compute the confusion matrix
cm = confusion_matrix(y_test, y_pred)

# Display the confusion matrix
disp = ConfusionMatrixDisplay(confusion_matrix=cm, display_labels=['Perished', 'Survived'])
disp.plot(cmap='Blues')

# Optional: customize the plot further
plt.xticks(rotation='vertical')
plt.title('Confusion Matrix')
plt.show()

from sklearn.metrics import classification_report

print(classification_report(y_test, y_predicted))

accuracy = model.score(x_test, y_test)
print(f'Accuracy: {accuracy:.2f}')

from sklearn.metrics import roc_curve, RocCurveDisplay
y_prob = model.predict_proba(x_test)[:,1]
fpr, tpr, _ = roc_curve(y_test, y_prob)

# Create the ROC curve display
disp = RocCurveDisplay(fpr=fpr, tpr=tpr)
disp.plot()

# Add labels and title if desired
plt.title('ROC Curve')
plt.xlabel('False Positive Rate')
plt.ylabel('True Positive Rate')

plt.show()